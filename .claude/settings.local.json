{
  "permissions": {
    "allow": [
      "Read(//f/MesDevs/mneia-whisper/docs/**)",
      "Bash(cat:*)",
      "Bash(clip)",
      "Bash(python:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Extend schema v1.1 with NLP annotations support (Phase 0 - ADR-001)\n\nAlign my-RAG with transcript service NLP enrichment strategy (ADR-2025-10-10-001).\nSupports both legacy (v1.0) and enriched (v1.1) transcript formats with backward compatibility.\n\n## Schema Extensions (conversation-payload.schema.json v1.1)\n\n**Segment-level annotations (optional):**\n- `annotations.sentiment`: label (very_positiveâ†’very_negative), score, stars (1-5), model metadata\n- `annotations.entities`: type (PERSON, ORG, LOC, DATE, TIME, MONEY), text, positions, confidence, metadata\n\n**Conversation-level analytics:**\n- `analytics.sentiment_summary`: overall sentiment, distribution, avg_stars, timeline\n- `analytics.entities_summary`: deduplicated entities by type (PERSON, ORG, LOC, etc.)\n\n**Quality tracking:**\n- `quality_flags.nlp_partial`: flag for incomplete NLP processing\n\n## Ingestion Schema Validation (src/ingestion/schemas.py)\n\n**New schemas:**\n- NLP_SENTIMENT_SCHEMA: validate sentiment annotations from upstream\n- NLP_ENTITY_SCHEMA: validate NER entity annotations\n- NLP_ANNOTATIONS_SCHEMA: combined annotation structure\n\n**Helper methods in SchemaValidator:**\n- `has_nlp_annotations()`: detect if payload contains NLP enrichments\n- `extract_sentiment_from_segment()`: extract sentiment from segment\n- `extract_entities_from_segment()`: extract entities from segment\n- `validate_nlp_sentiment()`, `validate_nlp_entity()`: validation methods\n\n**Schema exports:**\n- Generated 9 JSON schema files in `src/ingestion/schemas/` for reference\n\n## Pydantic Model Updates (src/ingestion/transcript_validator.py)\n\n- Fix Pydantic v2 compatibility (`regex` â†’ `pattern`)\n- Extend `Sentiment` model with `stars` and `metadata` fields\n- Support new sentiment labels (very_positive, very_negative)\n\n## Backward Compatibility\n\nâœ… All NLP fields are **optional** - legacy v1.0 payloads remain valid\nâœ… Graceful degradation: absence of annotations triggers local NLP fallback\nâœ… No breaking changes to existing ingestion pipeline\n\n## Implementation Notes\n\n- Aligns with transcript service ADR-2025-10-10-001 (Option D: Hybrid Optimized)\n- Prepares for Phase 1: Hybrid consumer (consume upstream NLP or fallback to local)\n- Schema version bumped: 1.0 â†’ 1.1 (minor, backward compatible)\n\nRelated ADR: transcript/docs/adr/ADR-2025-10-10-001-nlp-placement.md\n\nFiles changed:\n- 3 modified (schema, schemas.py, validator)\n- 9 new schema JSON exports\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
